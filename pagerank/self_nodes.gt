element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex,Vertex, int) = load (argv[1]);
const vertices : vertexset{Vertex};
const out_degree : vector {Vertex}(int);

func initOutDegree(v : Vertex)
	 out_degree[v] = 0;
end
	 
func sumDegree(src : Vertex, dst: Vertex, mag : int)
	 out_degree[src] += mag;
end

func main()
    vertices = edges.getVertices();

	vertices.apply(initOutDegree);
	edges.apply(sumDegree);
	var max_degree : int = out_degree.max();

	print max_degree;


    var n : int = edges.getVertices();

	for i in 0:n
		print i;
		print out_degree[i];
	end

end

schedule:
    program->configApplyDirection("s1", "DensePull")->configApplyParallelization("s1","dynamic-vertex-parallel");
